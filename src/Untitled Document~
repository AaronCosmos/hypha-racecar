#include "ros/ros.h"

/**
 * This tutorial demonstrates simple receipt of messages over the ROS system.
 */

class PoseSubscriiber
{
public:
  PoseSubscriiber()
  {
    //Topic you want to publish
    //pub_ = n_.advertise<std_msgs::Int32>("chatter_2", 1000);
    //pub2_ = n_.advertise<std_msgs::String>("chatter_3", 1000);

    //Topic you want to subscribe
    sub_ = n_.subscribe("poseupdate", 100, &PoseSubscriiber::callback, this);
  }

  void callback(const geometry_msgs::PoseWithCovarianceStamped::ConstPtr& pose)
  {
		
		ROS_INFO("I heard: HI");
    //.... do something with the input and generate the output...

  }

private:
  ros::NodeHandle n_; 
  //ros::Publisher pub_;
  //ros::Publisher pub2_;
  ros::Subscriber sub_;

};

int main(int argc, char **argv)
{
  //Initiate ROS
  ros::init(argc, argv, "pose_listener");

  //Create an object of class SubscribeAndPublish that will take care of everything
  PoseSubscriiber pose_listener;

  ros::spin();

  return 0;
}
